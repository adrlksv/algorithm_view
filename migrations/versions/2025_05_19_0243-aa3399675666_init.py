"""init

Revision ID: aa3399675666
Revises: 
Create Date: 2025-05-19 02:43:18.824128

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'aa3399675666'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('algorithm',
    sa.Column('algorithm_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('AES', 'RSA', 'ECC', name='algorithmtype'), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('is_symmetric', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('algorithm_id')
    )
    op.create_index(op.f('ix_algorithm_algorithm_id'), 'algorithm', ['algorithm_id'], unique=False)
    op.create_table('key',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('algorithm_type', sa.Enum('AES', 'RSA', 'ECC', name='algorithmtype'), nullable=False),
    sa.Column('key_data', sa.String(), nullable=False),
    sa.Column('key_length', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_key_id'), 'key', ['id'], unique=False)
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('algorithm_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('algorithm_id', sa.Integer(), nullable=False),
    sa.Column('param_name', sa.String(), nullable=False),
    sa.Column('param_type', sa.String(), nullable=False),
    sa.Column('default_value', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['algorithm_id'], ['algorithm.algorithm_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_algorithm_parameters_id'), 'algorithm_parameters', ['id'], unique=False)
    op.create_table('comparison',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('algorithm1_id', sa.Integer(), nullable=False),
    sa.Column('algorithm2_id', sa.Integer(), nullable=False),
    sa.Column('input_data', sa.String(), nullable=False),
    sa.Column('results', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['algorithm1_id'], ['algorithm.algorithm_id'], ),
    sa.ForeignKeyConstraint(['algorithm2_id'], ['algorithm.algorithm_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comparison_id'), 'comparison', ['id'], unique=False)
    op.create_table('example',
    sa.Column('example_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('algorithm_id', sa.Integer(), nullable=False),
    sa.Column('key_id', sa.Integer(), nullable=False),
    sa.Column('input_data', sa.String(), nullable=False),
    sa.Column('output_data', sa.String(), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=False),
    sa.Column('notes', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_favorite', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['algorithm_id'], ['algorithm.algorithm_id'], ),
    sa.ForeignKeyConstraint(['key_id'], ['key.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('example_id')
    )
    op.create_index(op.f('ix_example_example_id'), 'example', ['example_id'], unique=False)
    op.create_index(op.f('ix_example_user_id'), 'example', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_example_user_id'), table_name='example')
    op.drop_index(op.f('ix_example_example_id'), table_name='example')
    op.drop_table('example')
    op.drop_index(op.f('ix_comparison_id'), table_name='comparison')
    op.drop_table('comparison')
    op.drop_index(op.f('ix_algorithm_parameters_id'), table_name='algorithm_parameters')
    op.drop_table('algorithm_parameters')
    op.drop_table('user')
    op.drop_index(op.f('ix_key_id'), table_name='key')
    op.drop_table('key')
    op.drop_index(op.f('ix_algorithm_algorithm_id'), table_name='algorithm')
    op.drop_table('algorithm')
    # ### end Alembic commands ###
